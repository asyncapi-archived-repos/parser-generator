asyncapi: '1.1.0'
info:
  title: OneOf example
  version: '1.0.0'

topics:
  test:
    publish:
      $ref: '#/components/messages/testMessages'

  test2:
    subscribe:
      # Use oneOf here if different messages are published on test2 topic.
      oneOf:
        - $ref: "#/components/messages/testMessage1"
        - $ref: "#/components/messages/testMessage2"

components:
  messages:
    testMessages:
      headers:
        type: object
        properties:
          header:
            type: string
      payload:
        oneOf: # oneOf in payload schema
          - $ref: "#/components/schemas/objectWithKey"
          - $ref: "#/components/schemas/objectWithKey2"
    testMessage1:
      headers:
        type: object
        properties:
          header1:
            type: string
      payload:
        $ref: "#/components/schemas/objectWithKey"
    testMessage2:
      headers:
        type: object
        properties:
          header2:
            type: string
      payload:
        $ref: "#/components/schemas/objectWithKey2"

  schemas:
    objectWithKey:
      oneOf:
        - type: object
          properties:
            key31:
              type: string
        - type: object
          properties:
            key32:
              type: string
    objectWithKey2:
      type: object
      properties:
        key2:
          type: string
